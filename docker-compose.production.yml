
version: "3.4"

services:
  proxy:
    image: nginx:alpine
    container_name: ontrack-proxy
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/nginx.conf.template
      - /etc/letsencrypt:/etc/letsencrypt
    environment:
      SERVER_NAME: ${SERVER_NAME}

  app:
    build:
      context: .
    container_name: ontrack
    restart: always
    depends_on:
      - database
    environment:
      NODE_ENV: production
      RAILS_ENV: production
      FORCE_SSL: "false"
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      DATABASE_URL: postgres://ontrack:${POSTGRES_PASSWORD}@database/ontrack

  database:
    image: postgres
    container_name: ontrack-db
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ontrack
      POSTGRES_DB: ontrack

volumes:
  database: {}